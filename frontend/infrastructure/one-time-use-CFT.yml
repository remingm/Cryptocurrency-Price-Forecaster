AWSTemplateFormatVersion: "2010-09-09"
# CFT for buckets for the frontend, should not be used during CI CD pipeline, only the first time setting up stack
Description: >
  - S3 bucket for hosting the application
  - S3 bucket for hosting bucket and cloudfront access logs
  - Origin Access Identity
Parameters:
  Environment:
    Type: String
    Default: int
    AllowedValues:
      - int
      - prod
Resources:
  # The Amazon S3 bucket into which our Single Page Application build files must be deployed
  S3Bucket:
    Type: "AWS::S3::Bucket"
    Properties:
      BucketName:
        Fn::Join:
          - ""
          - - "stonk-pix-frontend-"
            - !Ref Environment
      PublicAccessBlockConfiguration:
        BlockPublicAcls: false
        BlockPublicPolicy: false
        IgnorePublicAcls: false
        RestrictPublicBuckets: false
      LoggingConfiguration:
        DestinationBucketName: !Ref LoggingBucket
        LogFilePrefix: s3-access-logs
      VersioningConfiguration:
        Status: Enabled
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: "AES256"

  # The Amazon S3 bucket policy for securing the bucket hosting the application
  BucketPolicy:
    Type: "AWS::S3::BucketPolicy"
    Properties:
      PolicyDocument:
        Id: MyPolicy
        Version: 2012-10-17
        Statement:
          - Sid: PolicyForCloudFrontPrivateContent
            Effect: Allow
            Principal:
              CanonicalUser: !GetAtt CFOriginAccessIdentity.S3CanonicalUserId
            Action: "s3:GetObject*"
            Resource: !Join
              - ""
              - - "arn:aws:s3:::"
                - !Ref S3Bucket
                - /*
      Bucket: !Ref S3Bucket

  # The Amazon S3 bucket into which access logs from S3 (for the application) and CloudFront will be put
  LoggingBucket:
    #checkov:skip=CKV_AWS_18: "This bucket is private and only for storing logs"
    Type: "AWS::S3::Bucket"
    Properties:
      BucketName:
        Fn::Join:
          - ""
          - - "stonk-pix-frontend-logs-"
            - !Ref Environment
      PublicAccessBlockConfiguration:
        BlockPublicAcls: false
        BlockPublicPolicy: false
        IgnorePublicAcls: false
        RestrictPublicBuckets: false
      AccessControl: LogDeliveryWrite
      VersioningConfiguration:
        Status: Enabled
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: "AES256"
    DeletionPolicy: Delete

  # The Amazon CloudFront origin access identity
  CFOriginAccessIdentity:
    Type: "AWS::CloudFront::CloudFrontOriginAccessIdentity"
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment:
          Fn::Join:
            - ""
            - - "access-identity-stonk-pix-frontend"
              - !Ref Environment

Outputs:
  BucketName:
    Value:
      Fn::Join:
        - ""
        - - "stonk-pix-frontend"
          - !Ref Environment
  OriginAccessIdentity:
    Description: The Origin Access Identity for Cloudfront and S3
    Value: !Ref CFOriginAccessIdentity
    Export:
      Name:
        "Fn::Sub": "${AWS::StackName}-OriginAccessIdentity"
