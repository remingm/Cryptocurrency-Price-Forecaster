variables:
  IMAGE_REPOSITORY_URL: 525599889582.dkr.ecr.us-west-2.amazonaws.com
  DOCKER_HOST: tcp://docker:2375
  TAG_LATEST: $IMAGE_REPOSITORY_URL/$APP_NAME:latest 
  TAG_COMMIT: $IMAGE_REPOSITORY_URL/$APP_NAME:$CI_PIPELINE_IID
  
.backend-variables:
  variables:
    APP_NAME: stonk-pix-backend
    DOCKER_DIRECTORY_PATH: backend
    CFT_PARAMETERS: ParameterKey=SessionSecret,ParameterValue=$BACKEND_SESSION_SECRET

.ml-backend-variables:
  variables: 
    APP_NAME: stonk-pix-ml-backend
    DOCKER_DIRECTORY_PATH: ml_backend
    CFT_PARAMETERS: "" 

.frontend-variables:
  variables: 
    APP_NAME: stonk-pix-frontend
    DOCKER_DIRECTORY_PATH: frontend
    CFT_PARAMETERS: ParameterKey=BucketStackName,ParameterValue=stonk-pix-s3-int

.int-environment:
  variables:
    ENVIRONMENT: int

.prod-environment:
  variables:
    ENVIRONMENT: prod    

.build-image-push-ecr:
  image: 
    name: amazon/aws-cli
    entrypoint: [""]
  services:
    - docker:dind
  before_script:
    - amazon-linux-extras install docker
    - aws --version
    - docker --version
  script:
    - docker build -t $TAG_COMMIT -t $TAG_LATEST ./$DOCKER_DIRECTORY_PATH
    - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $IMAGE_REPOSITORY_URL
    - docker push $TAG_COMMIT
    - docker push $TAG_LATEST
  interruptible: true     
  only:
    - main

.deploy:
  image: 
    name: amazon/aws-cli
    entrypoint: [""]
  before_script:
    - aws --version
  script:
    - sh deployment/scripts/create-or-update-stacks.sh us-west-2 $APP_NAME-$ENVIRONMENT --parameters $CFT_PARAMETERS --template-body file://$DOCKER_DIRECTORY_PATH/infrastructure/CFT.yml --capabilities CAPABILITY_NAMED_IAM
