include:
  - "deployment/templates/.ci-templates.yml"

stages:
  - build
  - deploy
  - post-deploy

backend-build-image-push-ecr:
  stage: build
  extends:
    - .backend-variables
    - .int-environment
    - .build-image-push-ecr
  only:
    - main

ml-build-image-push-ecr:
  extends:
    - .ml-backend-variables
    - .int-environment
    - .build-image-push-ecr
  stage: build
  only:
    - main

build-frontend:
  image: node:latest
  stage: build
  only:
    - main
  script:
    - cd ./frontend/
    - npm install
    - CI=false npm run-script build
  artifacts:
    paths:
      - frontend/dist
    expire_in: 1 hour

backend-deploy:
  stage: deploy
  needs:
    - backend-build-image-push-ecr
  extends:
    - .backend-variables
    - .int-environment
    - .deploy
  only:
    - main

frontend-deploy-cloudfront:
  stage: deploy
  needs:
    - build-frontend
  extends:
    - .frontend-variables
    - .int-environment
    - .deploy
  only:
    - main

frontend-deploy-s3:
  image:
    name: amazon/aws-cli
    entrypoint: [""]
  stage: post-deploy
  needs:
    - build-frontend
    - frontend-deploy-cloudfront
  dependencies:
    - build-frontend
  only:
    - main
  before_script:
    - aws --version
  script:
    - aws s3 sync ./frontend/dist/ $AWS_S3_URL --delete
    - distributionId=$(aws cloudformation describe-stacks --stack-name stonk-pix-frontend-int --query "Stacks[0].Outputs[?OutputKey=='CloudFrontDistributionID'].OutputValue" --output text)
    - aws cloudfront create-invalidation --distribution-id $distributionId --paths /*

ml-backend-deploy:
  stage: deploy
  needs:
    - ml-build-image-push-ecr
  extends:
    - .ml-backend-variables
    - .int-environment
    - .deploy
  only:
    - main
